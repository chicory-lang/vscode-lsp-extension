{
  "name": "Chicory",
  "scopeName": "source.chicory",
  "fileTypes": ["chic"],
  "patterns": [
    {
      "name": "comment.block.chicory",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "name": "comment.line.double-slash.chicory",
      "match": "//.*"
    },
    {
      "name": "string.quoted.double.chicory",
      "match": "\"[^\"\\n]*\""
    },
    {
      "name": "constant.numeric.chicory",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    {
      "begin": "(<)([a-zA-Z_][a-zA-Z0-9_]*)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.chicory" },
        "2": { "name": "entity.name.tag.chicory" }
      },
      "end": "(/>|>)",
      "endCaptures": {
        "0": { "name": "punctuation.definition.tag.end.chicory" }
      },
      "patterns": [
        { "include": "#jsxAttributes" },
        { "include": "#jsxChildren" }
      ],
      "name": "meta.tag.chicory"
    },
    {
      "match": "</([a-zA-Z_][a-zA-Z0-9_]*)\\s*>",
      "captures": {
        "0": { "name": "punctuation.definition.tag.end.chicory" },
        "1": { "name": "entity.name.tag.chicory" }
      },
      "name": "meta.tag.chicory"
    },
    {
      "name": "keyword.operator.chicory",
      "match": "\\+|-|\\*|\/|=3D=3D|!=3D|<|>|<=3D|>=3D|&&|\\|\\|"
    },
    {
      "name": "keyword.control.chicory",
      "match": "\\b(if|else|match)\\b"
    },
    {
      "name": "storage.type.chicory",
      "match": "\\b(let|const)\\b"
    },
    {
      "name": "keyword.other.chicory",
      "match": "\\b(type)\\b"
    },
    {
      "name": "keyword.other.chicory",
      "match": "\\b(string|number|boolean)\\b"
    },
    {
      "name": "keyword.control.import.chicory",
      "match": "\\b(import|from|export)\\b"
    },
    {
      "name": "constant.language.boolean.chicory",
      "match": "\\b(true|false)\\b"
    },
    {
      "name": "punctuation.definition.arrow.chicory",
      "match": "=3D>"
    },
    {
      "begin": "\\b(type)\\b\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*=3D",
      "beginCaptures": {
        "1": { "name": "keyword.other.chicory" },
        "2": { "name": "entity.name.type.chicory" }
      },
      "end": "(?=3D\\b(type|let|const)\\b)|$",
      "patterns": [
        { "match": "\\|", "name": "punctuation.separator.chicory" },
        { "match": "\\b([A-Z][a-zA-Z0-9_]*)\\b", "name": "support.type.constructor.chicory" },
        { "match": "\\(", "name": "punctuation.parenthesis.open.chicory" },
        { "match": "\\)", "name": "punctuation.parenthesis.close.chicory" },
        { "match": "\\b(number|string|boolean)\\b", "name": "keyword.type.chicory" },
        { "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b", "name": "support.type.chicory" }
      ],
      "name": "meta.type.definition.chicory"
    },
    {
      "name": "variable.chicory",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    }
  ],
  "repository": {
    "jsxAttributes": {
      "patterns": [
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)=3D(\"[^\"]*\"|{[^}]*})",
          "captures": {
            "1": { "name": "entity.other.attribute-name.chicory" },
            "2": { "name": "string.quoted.double.chicory" }
          }
        }
      ]
    },
    "jsxChildren": {
      "patterns": [
        {
          "begin": "{",
          "end": "}",
          "patterns": [
            { "include": "$self" }
          ],
          "name": "meta.embedded.expression.chicory"
        },
        {
          "match": "[^<>{}]+",
          "name": "text.html.chicory"
        },
        {
          "include": "#jsxExpr"
        }
      ]
    },
    "jsxExpr": {
      "patterns": [
        {
          "begin": "<",
          "end": ">",
          "patterns": [
            { "include": "#jsxAttributes" },
            { "include": "#jsxChildren" }
          ],
          "name": "meta.tag.chicory"
        }
      ]
    }
  }
}